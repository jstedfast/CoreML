// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: VisionFeaturePrint.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CoreML.Specification.CoreMLModels {

  /// <summary>Holder for reflection information generated from VisionFeaturePrint.proto</summary>
  public static partial class VisionFeaturePrintReflection {

    #region Descriptor
    /// <summary>File descriptor for VisionFeaturePrint.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VisionFeaturePrintReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhWaXNpb25GZWF0dXJlUHJpbnQucHJvdG8SIUNvcmVNTC5TcGVjaWZpY2F0",
            "aW9uLkNvcmVNTE1vZGVscyKhAgoSVmlzaW9uRmVhdHVyZVByaW50EkwKBXNj",
            "ZW5lGBQgASgLMjsuQ29yZU1MLlNwZWNpZmljYXRpb24uQ29yZU1MTW9kZWxz",
            "LlZpc2lvbkZlYXR1cmVQcmludC5TY2VuZUgAGqIBCgVTY2VuZRJZCgd2ZXJz",
            "aW9uGAEgASgOMkguQ29yZU1MLlNwZWNpZmljYXRpb24uQ29yZU1MTW9kZWxz",
            "LlZpc2lvbkZlYXR1cmVQcmludC5TY2VuZS5TY2VuZVZlcnNpb24iPgoMU2Nl",
            "bmVWZXJzaW9uEhkKFVNDRU5FX1ZFUlNJT05fSU5WQUxJRBAAEhMKD1NDRU5F",
            "X1ZFUlNJT05fMRABQhgKFlZpc2lvbkZlYXR1cmVQcmludFR5cGVCAkgDYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CoreML.Specification.CoreMLModels.VisionFeaturePrint), global::CoreML.Specification.CoreMLModels.VisionFeaturePrint.Parser, new[]{ "Scene" }, new[]{ "VisionFeaturePrintType" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CoreML.Specification.CoreMLModels.VisionFeaturePrint.Types.Scene), global::CoreML.Specification.CoreMLModels.VisionFeaturePrint.Types.Scene.Parser, new[]{ "Version" }, null, new[]{ typeof(global::CoreML.Specification.CoreMLModels.VisionFeaturePrint.Types.Scene.Types.SceneVersion) }, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///*
  /// A model which takes an input image and outputs an array of features
  /// according to the specified feature types
  /// </summary>
  public sealed partial class VisionFeaturePrint : pb::IMessage<VisionFeaturePrint> {
    private static readonly pb::MessageParser<VisionFeaturePrint> _parser = new pb::MessageParser<VisionFeaturePrint>(() => new VisionFeaturePrint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VisionFeaturePrint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CoreML.Specification.CoreMLModels.VisionFeaturePrintReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VisionFeaturePrint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VisionFeaturePrint(VisionFeaturePrint other) : this() {
      switch (other.VisionFeaturePrintTypeCase) {
        case VisionFeaturePrintTypeOneofCase.Scene:
          Scene = other.Scene.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VisionFeaturePrint Clone() {
      return new VisionFeaturePrint(this);
    }

    /// <summary>Field number for the "scene" field.</summary>
    public const int SceneFieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CoreML.Specification.CoreMLModels.VisionFeaturePrint.Types.Scene Scene {
      get { return visionFeaturePrintTypeCase_ == VisionFeaturePrintTypeOneofCase.Scene ? (global::CoreML.Specification.CoreMLModels.VisionFeaturePrint.Types.Scene) visionFeaturePrintType_ : null; }
      set {
        visionFeaturePrintType_ = value;
        visionFeaturePrintTypeCase_ = value == null ? VisionFeaturePrintTypeOneofCase.None : VisionFeaturePrintTypeOneofCase.Scene;
      }
    }

    private object visionFeaturePrintType_;
    /// <summary>Enum of possible cases for the "VisionFeaturePrintType" oneof.</summary>
    public enum VisionFeaturePrintTypeOneofCase {
      None = 0,
      Scene = 20,
    }
    private VisionFeaturePrintTypeOneofCase visionFeaturePrintTypeCase_ = VisionFeaturePrintTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VisionFeaturePrintTypeOneofCase VisionFeaturePrintTypeCase {
      get { return visionFeaturePrintTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVisionFeaturePrintType() {
      visionFeaturePrintTypeCase_ = VisionFeaturePrintTypeOneofCase.None;
      visionFeaturePrintType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VisionFeaturePrint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VisionFeaturePrint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Scene, other.Scene)) return false;
      if (VisionFeaturePrintTypeCase != other.VisionFeaturePrintTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (visionFeaturePrintTypeCase_ == VisionFeaturePrintTypeOneofCase.Scene) hash ^= Scene.GetHashCode();
      hash ^= (int) visionFeaturePrintTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (visionFeaturePrintTypeCase_ == VisionFeaturePrintTypeOneofCase.Scene) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Scene);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (visionFeaturePrintTypeCase_ == VisionFeaturePrintTypeOneofCase.Scene) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Scene);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VisionFeaturePrint other) {
      if (other == null) {
        return;
      }
      switch (other.VisionFeaturePrintTypeCase) {
        case VisionFeaturePrintTypeOneofCase.Scene:
          if (Scene == null) {
            Scene = new global::CoreML.Specification.CoreMLModels.VisionFeaturePrint.Types.Scene();
          }
          Scene.MergeFrom(other.Scene);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 162: {
            global::CoreML.Specification.CoreMLModels.VisionFeaturePrint.Types.Scene subBuilder = new global::CoreML.Specification.CoreMLModels.VisionFeaturePrint.Types.Scene();
            if (visionFeaturePrintTypeCase_ == VisionFeaturePrintTypeOneofCase.Scene) {
              subBuilder.MergeFrom(Scene);
            }
            input.ReadMessage(subBuilder);
            Scene = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the VisionFeaturePrint message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Scene extracts features useful for identifying contents of natural images
      /// in both indoor and outdoor environments
      /// </summary>
      public sealed partial class Scene : pb::IMessage<Scene> {
        private static readonly pb::MessageParser<Scene> _parser = new pb::MessageParser<Scene>(() => new Scene());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Scene> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::CoreML.Specification.CoreMLModels.VisionFeaturePrint.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Scene() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Scene(Scene other) : this() {
          version_ = other.version_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Scene Clone() {
          return new Scene(this);
        }

        /// <summary>Field number for the "version" field.</summary>
        public const int VersionFieldNumber = 1;
        private global::CoreML.Specification.CoreMLModels.VisionFeaturePrint.Types.Scene.Types.SceneVersion version_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::CoreML.Specification.CoreMLModels.VisionFeaturePrint.Types.Scene.Types.SceneVersion Version {
          get { return version_; }
          set {
            version_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Scene);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Scene other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Version != other.Version) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Version != 0) hash ^= Version.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Version != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Version);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Version != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Version);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Scene other) {
          if (other == null) {
            return;
          }
          if (other.Version != 0) {
            Version = other.Version;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                version_ = (global::CoreML.Specification.CoreMLModels.VisionFeaturePrint.Types.Scene.Types.SceneVersion) input.ReadEnum();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Scene message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum SceneVersion {
            [pbr::OriginalName("SCENE_VERSION_INVALID")] Invalid = 0,
            /// <summary>
            /// VERSION_1 is available on iOS,tvOS 12.0+, macOS 10.14+
            /// It uses a 299x299 input image and yields a 2048 float feature vector
            /// </summary>
            [pbr::OriginalName("SCENE_VERSION_1")] _1 = 1,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
