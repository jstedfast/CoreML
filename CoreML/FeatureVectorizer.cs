// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: FeatureVectorizer.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CoreML.Specification {

  /// <summary>Holder for reflection information generated from FeatureVectorizer.proto</summary>
  public static partial class FeatureVectorizerReflection {

    #region Descriptor
    /// <summary>File descriptor for FeatureVectorizer.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FeatureVectorizerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdGZWF0dXJlVmVjdG9yaXplci5wcm90bxIUQ29yZU1MLlNwZWNpZmljYXRp",
            "b24imAEKEUZlYXR1cmVWZWN0b3JpemVyEkYKCWlucHV0TGlzdBgBIAMoCzIz",
            "LkNvcmVNTC5TcGVjaWZpY2F0aW9uLkZlYXR1cmVWZWN0b3JpemVyLklucHV0",
            "Q29sdW1uGjsKC0lucHV0Q29sdW1uEhMKC2lucHV0Q29sdW1uGAEgASgJEhcK",
            "D2lucHV0RGltZW5zaW9ucxgCIAEoBEICSANiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CoreML.Specification.FeatureVectorizer), global::CoreML.Specification.FeatureVectorizer.Parser, new[]{ "InputList" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CoreML.Specification.FeatureVectorizer.Types.InputColumn), global::CoreML.Specification.FeatureVectorizer.Types.InputColumn.Parser, new[]{ "InputColumn_", "InputDimensions" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///*
  /// A FeatureVectorizer puts one or more features into a single array.
  ///
  /// The ordering of features in the output array is determined by
  /// ``inputList``.
  ///
  /// ``inputDimensions`` is a zero based index.
  /// </summary>
  public sealed partial class FeatureVectorizer : pb::IMessage<FeatureVectorizer> {
    private static readonly pb::MessageParser<FeatureVectorizer> _parser = new pb::MessageParser<FeatureVectorizer>(() => new FeatureVectorizer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeatureVectorizer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CoreML.Specification.FeatureVectorizerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureVectorizer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureVectorizer(FeatureVectorizer other) : this() {
      inputList_ = other.inputList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureVectorizer Clone() {
      return new FeatureVectorizer(this);
    }

    /// <summary>Field number for the "inputList" field.</summary>
    public const int InputListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::CoreML.Specification.FeatureVectorizer.Types.InputColumn> _repeated_inputList_codec
        = pb::FieldCodec.ForMessage(10, global::CoreML.Specification.FeatureVectorizer.Types.InputColumn.Parser);
    private readonly pbc::RepeatedField<global::CoreML.Specification.FeatureVectorizer.Types.InputColumn> inputList_ = new pbc::RepeatedField<global::CoreML.Specification.FeatureVectorizer.Types.InputColumn>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::CoreML.Specification.FeatureVectorizer.Types.InputColumn> InputList {
      get { return inputList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeatureVectorizer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeatureVectorizer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!inputList_.Equals(other.inputList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= inputList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      inputList_.WriteTo(output, _repeated_inputList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += inputList_.CalculateSize(_repeated_inputList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeatureVectorizer other) {
      if (other == null) {
        return;
      }
      inputList_.Add(other.inputList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            inputList_.AddEntriesFrom(input, _repeated_inputList_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the FeatureVectorizer message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class InputColumn : pb::IMessage<InputColumn> {
        private static readonly pb::MessageParser<InputColumn> _parser = new pb::MessageParser<InputColumn>(() => new InputColumn());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<InputColumn> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::CoreML.Specification.FeatureVectorizer.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InputColumn() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InputColumn(InputColumn other) : this() {
          inputColumn_ = other.inputColumn_;
          inputDimensions_ = other.inputDimensions_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InputColumn Clone() {
          return new InputColumn(this);
        }

        /// <summary>Field number for the "inputColumn" field.</summary>
        public const int InputColumn_FieldNumber = 1;
        private string inputColumn_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string InputColumn_ {
          get { return inputColumn_; }
          set {
            inputColumn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "inputDimensions" field.</summary>
        public const int InputDimensionsFieldNumber = 2;
        private ulong inputDimensions_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong InputDimensions {
          get { return inputDimensions_; }
          set {
            inputDimensions_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as InputColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(InputColumn other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (InputColumn_ != other.InputColumn_) return false;
          if (InputDimensions != other.InputDimensions) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (InputColumn_.Length != 0) hash ^= InputColumn_.GetHashCode();
          if (InputDimensions != 0UL) hash ^= InputDimensions.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (InputColumn_.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(InputColumn_);
          }
          if (InputDimensions != 0UL) {
            output.WriteRawTag(16);
            output.WriteUInt64(InputDimensions);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (InputColumn_.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(InputColumn_);
          }
          if (InputDimensions != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(InputDimensions);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(InputColumn other) {
          if (other == null) {
            return;
          }
          if (other.InputColumn_.Length != 0) {
            InputColumn_ = other.InputColumn_;
          }
          if (other.InputDimensions != 0UL) {
            InputDimensions = other.InputDimensions;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                InputColumn_ = input.ReadString();
                break;
              }
              case 16: {
                InputDimensions = input.ReadUInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
