// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: TextClassifier.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CoreML.Specification.CoreMLModels {

  /// <summary>Holder for reflection information generated from TextClassifier.proto</summary>
  public static partial class TextClassifierReflection {

    #region Descriptor
    /// <summary>File descriptor for TextClassifier.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TextClassifierReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRUZXh0Q2xhc3NpZmllci5wcm90bxIhQ29yZU1MLlNwZWNpZmljYXRpb24u",
            "Q29yZU1MTW9kZWxzGhREYXRhU3RydWN0dXJlcy5wcm90byKhAQoOVGV4dENs",
            "YXNzaWZpZXISEAoIcmV2aXNpb24YASABKA0SEAoIbGFuZ3VhZ2UYCiABKAkS",
            "GgoSbW9kZWxQYXJhbWV0ZXJEYXRhGGQgASgMEkAKEXN0cmluZ0NsYXNzTGFi",
            "ZWxzGMgBIAEoCzIiLkNvcmVNTC5TcGVjaWZpY2F0aW9uLlN0cmluZ1ZlY3Rv",
            "ckgAQg0KC0NsYXNzTGFiZWxzQgJIA1AAYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::CoreML.Specification.DataStructuresReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CoreML.Specification.CoreMLModels.TextClassifier), global::CoreML.Specification.CoreMLModels.TextClassifier.Parser, new[]{ "Revision", "Language", "ModelParameterData", "StringClassLabels" }, new[]{ "ClassLabels" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///*
  /// A model which takes a single input string and outputs a
  /// label for the input.
  /// </summary>
  public sealed partial class TextClassifier : pb::IMessage<TextClassifier> {
    private static readonly pb::MessageParser<TextClassifier> _parser = new pb::MessageParser<TextClassifier>(() => new TextClassifier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TextClassifier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CoreML.Specification.CoreMLModels.TextClassifierReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextClassifier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextClassifier(TextClassifier other) : this() {
      revision_ = other.revision_;
      language_ = other.language_;
      modelParameterData_ = other.modelParameterData_;
      switch (other.ClassLabelsCase) {
        case ClassLabelsOneofCase.StringClassLabels:
          StringClassLabels = other.StringClassLabels.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextClassifier Clone() {
      return new TextClassifier(this);
    }

    /// <summary>Field number for the "revision" field.</summary>
    public const int RevisionFieldNumber = 1;
    private uint revision_;
    /// <summary>
    ///
    /// Stores the resivion number for the model, revision 1 is available on
    /// iOS, tvOS 12.0+, macoOS 10.14+
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Revision {
      get { return revision_; }
      set {
        revision_ = value;
      }
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 10;
    private string language_ = "";
    /// <summary>
    ///
    /// Stores the language of the model, as specified in BCP-47 format,
    /// e.g. "en-US". See https://tools.ietf.org/html/bcp47
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Language {
      get { return language_; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modelParameterData" field.</summary>
    public const int ModelParameterDataFieldNumber = 100;
    private pb::ByteString modelParameterData_ = pb::ByteString.Empty;
    /// <summary>
    ///
    /// Stores the byte representation of learned model parameters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ModelParameterData {
      get { return modelParameterData_; }
      set {
        modelParameterData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stringClassLabels" field.</summary>
    public const int StringClassLabelsFieldNumber = 200;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CoreML.Specification.StringVector StringClassLabels {
      get { return classLabelsCase_ == ClassLabelsOneofCase.StringClassLabels ? (global::CoreML.Specification.StringVector) classLabels_ : null; }
      set {
        classLabels_ = value;
        classLabelsCase_ = value == null ? ClassLabelsOneofCase.None : ClassLabelsOneofCase.StringClassLabels;
      }
    }

    private object classLabels_;
    /// <summary>Enum of possible cases for the "ClassLabels" oneof.</summary>
    public enum ClassLabelsOneofCase {
      None = 0,
      StringClassLabels = 200,
    }
    private ClassLabelsOneofCase classLabelsCase_ = ClassLabelsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClassLabelsOneofCase ClassLabelsCase {
      get { return classLabelsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClassLabels() {
      classLabelsCase_ = ClassLabelsOneofCase.None;
      classLabels_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TextClassifier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TextClassifier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Revision != other.Revision) return false;
      if (Language != other.Language) return false;
      if (ModelParameterData != other.ModelParameterData) return false;
      if (!object.Equals(StringClassLabels, other.StringClassLabels)) return false;
      if (ClassLabelsCase != other.ClassLabelsCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Revision != 0) hash ^= Revision.GetHashCode();
      if (Language.Length != 0) hash ^= Language.GetHashCode();
      if (ModelParameterData.Length != 0) hash ^= ModelParameterData.GetHashCode();
      if (classLabelsCase_ == ClassLabelsOneofCase.StringClassLabels) hash ^= StringClassLabels.GetHashCode();
      hash ^= (int) classLabelsCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Revision != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Revision);
      }
      if (Language.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Language);
      }
      if (ModelParameterData.Length != 0) {
        output.WriteRawTag(162, 6);
        output.WriteBytes(ModelParameterData);
      }
      if (classLabelsCase_ == ClassLabelsOneofCase.StringClassLabels) {
        output.WriteRawTag(194, 12);
        output.WriteMessage(StringClassLabels);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Revision != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Revision);
      }
      if (Language.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (ModelParameterData.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(ModelParameterData);
      }
      if (classLabelsCase_ == ClassLabelsOneofCase.StringClassLabels) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StringClassLabels);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TextClassifier other) {
      if (other == null) {
        return;
      }
      if (other.Revision != 0) {
        Revision = other.Revision;
      }
      if (other.Language.Length != 0) {
        Language = other.Language;
      }
      if (other.ModelParameterData.Length != 0) {
        ModelParameterData = other.ModelParameterData;
      }
      switch (other.ClassLabelsCase) {
        case ClassLabelsOneofCase.StringClassLabels:
          if (StringClassLabels == null) {
            StringClassLabels = new global::CoreML.Specification.StringVector();
          }
          StringClassLabels.MergeFrom(other.StringClassLabels);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Revision = input.ReadUInt32();
            break;
          }
          case 82: {
            Language = input.ReadString();
            break;
          }
          case 802: {
            ModelParameterData = input.ReadBytes();
            break;
          }
          case 1602: {
            global::CoreML.Specification.StringVector subBuilder = new global::CoreML.Specification.StringVector();
            if (classLabelsCase_ == ClassLabelsOneofCase.StringClassLabels) {
              subBuilder.MergeFrom(StringClassLabels);
            }
            input.ReadMessage(subBuilder);
            StringClassLabels = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
