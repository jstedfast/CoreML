// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: OneHotEncoder.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CoreML.Specification {

  /// <summary>Holder for reflection information generated from OneHotEncoder.proto</summary>
  public static partial class OneHotEncoderReflection {

    #region Descriptor
    /// <summary>File descriptor for OneHotEncoder.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OneHotEncoderReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNPbmVIb3RFbmNvZGVyLnByb3RvEhRDb3JlTUwuU3BlY2lmaWNhdGlvbhoU",
            "RGF0YVN0cnVjdHVyZXMucHJvdG8itQIKDU9uZUhvdEVuY29kZXISPgoQc3Ry",
            "aW5nQ2F0ZWdvcmllcxgBIAEoCzIiLkNvcmVNTC5TcGVjaWZpY2F0aW9uLlN0",
            "cmluZ1ZlY3RvckgAEjwKD2ludDY0Q2F0ZWdvcmllcxgCIAEoCzIhLkNvcmVN",
            "TC5TcGVjaWZpY2F0aW9uLkludDY0VmVjdG9ySAASFAoMb3V0cHV0U3BhcnNl",
            "GAogASgIEkgKDWhhbmRsZVVua25vd24YCyABKA4yMS5Db3JlTUwuU3BlY2lm",
            "aWNhdGlvbi5PbmVIb3RFbmNvZGVyLkhhbmRsZVVua25vd24iNgoNSGFuZGxl",
            "VW5rbm93bhISCg5FcnJvck9uVW5rbm93bhAAEhEKDUlnbm9yZVVua25vd24Q",
            "AUIOCgxDYXRlZ29yeVR5cGVCAkgDUABiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::CoreML.Specification.DataStructuresReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CoreML.Specification.OneHotEncoder), global::CoreML.Specification.OneHotEncoder.Parser, new[]{ "StringCategories", "Int64Categories", "OutputSparse", "HandleUnknown" }, new[]{ "CategoryType" }, new[]{ typeof(global::CoreML.Specification.OneHotEncoder.Types.HandleUnknown) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///*
  /// Transforms a categorical feature into an array. The array will be all
  /// zeros expect a single entry of one.
  ///
  /// Each categorical value will map to an index, this mapping is given by
  /// either the ``stringCategories`` parameter or the ``int64Categories``
  /// parameter.
  /// </summary>
  public sealed partial class OneHotEncoder : pb::IMessage<OneHotEncoder> {
    private static readonly pb::MessageParser<OneHotEncoder> _parser = new pb::MessageParser<OneHotEncoder>(() => new OneHotEncoder());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OneHotEncoder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CoreML.Specification.OneHotEncoderReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneHotEncoder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneHotEncoder(OneHotEncoder other) : this() {
      outputSparse_ = other.outputSparse_;
      handleUnknown_ = other.handleUnknown_;
      switch (other.CategoryTypeCase) {
        case CategoryTypeOneofCase.StringCategories:
          StringCategories = other.StringCategories.Clone();
          break;
        case CategoryTypeOneofCase.Int64Categories:
          Int64Categories = other.Int64Categories.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneHotEncoder Clone() {
      return new OneHotEncoder(this);
    }

    /// <summary>Field number for the "stringCategories" field.</summary>
    public const int StringCategoriesFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CoreML.Specification.StringVector StringCategories {
      get { return categoryTypeCase_ == CategoryTypeOneofCase.StringCategories ? (global::CoreML.Specification.StringVector) categoryType_ : null; }
      set {
        categoryType_ = value;
        categoryTypeCase_ = value == null ? CategoryTypeOneofCase.None : CategoryTypeOneofCase.StringCategories;
      }
    }

    /// <summary>Field number for the "int64Categories" field.</summary>
    public const int Int64CategoriesFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CoreML.Specification.Int64Vector Int64Categories {
      get { return categoryTypeCase_ == CategoryTypeOneofCase.Int64Categories ? (global::CoreML.Specification.Int64Vector) categoryType_ : null; }
      set {
        categoryType_ = value;
        categoryTypeCase_ = value == null ? CategoryTypeOneofCase.None : CategoryTypeOneofCase.Int64Categories;
      }
    }

    /// <summary>Field number for the "outputSparse" field.</summary>
    public const int OutputSparseFieldNumber = 10;
    private bool outputSparse_;
    /// <summary>
    /// Output can be a dictionary with only one entry, instead of an array.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OutputSparse {
      get { return outputSparse_; }
      set {
        outputSparse_ = value;
      }
    }

    /// <summary>Field number for the "handleUnknown" field.</summary>
    public const int HandleUnknownFieldNumber = 11;
    private global::CoreML.Specification.OneHotEncoder.Types.HandleUnknown handleUnknown_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CoreML.Specification.OneHotEncoder.Types.HandleUnknown HandleUnknown {
      get { return handleUnknown_; }
      set {
        handleUnknown_ = value;
      }
    }

    private object categoryType_;
    /// <summary>Enum of possible cases for the "CategoryType" oneof.</summary>
    public enum CategoryTypeOneofCase {
      None = 0,
      StringCategories = 1,
      Int64Categories = 2,
    }
    private CategoryTypeOneofCase categoryTypeCase_ = CategoryTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryTypeOneofCase CategoryTypeCase {
      get { return categoryTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCategoryType() {
      categoryTypeCase_ = CategoryTypeOneofCase.None;
      categoryType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OneHotEncoder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OneHotEncoder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StringCategories, other.StringCategories)) return false;
      if (!object.Equals(Int64Categories, other.Int64Categories)) return false;
      if (OutputSparse != other.OutputSparse) return false;
      if (HandleUnknown != other.HandleUnknown) return false;
      if (CategoryTypeCase != other.CategoryTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (categoryTypeCase_ == CategoryTypeOneofCase.StringCategories) hash ^= StringCategories.GetHashCode();
      if (categoryTypeCase_ == CategoryTypeOneofCase.Int64Categories) hash ^= Int64Categories.GetHashCode();
      if (OutputSparse != false) hash ^= OutputSparse.GetHashCode();
      if (HandleUnknown != 0) hash ^= HandleUnknown.GetHashCode();
      hash ^= (int) categoryTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (categoryTypeCase_ == CategoryTypeOneofCase.StringCategories) {
        output.WriteRawTag(10);
        output.WriteMessage(StringCategories);
      }
      if (categoryTypeCase_ == CategoryTypeOneofCase.Int64Categories) {
        output.WriteRawTag(18);
        output.WriteMessage(Int64Categories);
      }
      if (OutputSparse != false) {
        output.WriteRawTag(80);
        output.WriteBool(OutputSparse);
      }
      if (HandleUnknown != 0) {
        output.WriteRawTag(88);
        output.WriteEnum((int) HandleUnknown);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (categoryTypeCase_ == CategoryTypeOneofCase.StringCategories) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StringCategories);
      }
      if (categoryTypeCase_ == CategoryTypeOneofCase.Int64Categories) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Int64Categories);
      }
      if (OutputSparse != false) {
        size += 1 + 1;
      }
      if (HandleUnknown != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) HandleUnknown);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OneHotEncoder other) {
      if (other == null) {
        return;
      }
      if (other.OutputSparse != false) {
        OutputSparse = other.OutputSparse;
      }
      if (other.HandleUnknown != 0) {
        HandleUnknown = other.HandleUnknown;
      }
      switch (other.CategoryTypeCase) {
        case CategoryTypeOneofCase.StringCategories:
          if (StringCategories == null) {
            StringCategories = new global::CoreML.Specification.StringVector();
          }
          StringCategories.MergeFrom(other.StringCategories);
          break;
        case CategoryTypeOneofCase.Int64Categories:
          if (Int64Categories == null) {
            Int64Categories = new global::CoreML.Specification.Int64Vector();
          }
          Int64Categories.MergeFrom(other.Int64Categories);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::CoreML.Specification.StringVector subBuilder = new global::CoreML.Specification.StringVector();
            if (categoryTypeCase_ == CategoryTypeOneofCase.StringCategories) {
              subBuilder.MergeFrom(StringCategories);
            }
            input.ReadMessage(subBuilder);
            StringCategories = subBuilder;
            break;
          }
          case 18: {
            global::CoreML.Specification.Int64Vector subBuilder = new global::CoreML.Specification.Int64Vector();
            if (categoryTypeCase_ == CategoryTypeOneofCase.Int64Categories) {
              subBuilder.MergeFrom(Int64Categories);
            }
            input.ReadMessage(subBuilder);
            Int64Categories = subBuilder;
            break;
          }
          case 80: {
            OutputSparse = input.ReadBool();
            break;
          }
          case 88: {
            handleUnknown_ = (global::CoreML.Specification.OneHotEncoder.Types.HandleUnknown) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the OneHotEncoder message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum HandleUnknown {
        [pbr::OriginalName("ErrorOnUnknown")] ErrorOnUnknown = 0,
        /// <summary>
        /// Output will be all zeros for unknown values.
        /// </summary>
        [pbr::OriginalName("IgnoreUnknown")] IgnoreUnknown = 1,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
